{"version":3,"sources":["components/Registration.js","components/HomePage.js","components/Login.js","components/SuccessfulLogin.js","index.js"],"names":["Registration","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","handleChange","event","setState","_defineProperty","target","name","value","console","log","state","formSubmit","password","confirmPassword","alert","formValues","userName","mobile","emailId","showDetails","history","push","pathname","data","lastName","_createClass","key","_this$state","securityQuestion","securityAnswer","role","isSecurityAnsEnabled","React","createElement","className","AvForm","onValidSubmit","Container","Row","Col","sm","md","size","offset","AvField","onChange","label","type","validate","required","errorMessage","pattern","minLength","maxLength","disabled","Button","color","Fragment","style","listStyleType","fontWeight","fontStyle","Component","HomePage","apply","arguments","Link","to","Login","loginUserName","loginPassword","SuccessfulLogin","App","dotenv","process","Router","Switch","Route","path","exact","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3b863ff9.chunk.js","sourcesContent":["import React from 'react'\nimport { AvForm, AvField } from 'availity-reactstrap-validation'\nimport { Button, Container, Row, Col } from 'reactstrap'\n\nexport default class Registration extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userName: '',\n      lastName: '',\n      mobile: '',\n      emailId: '',\n      password: '',\n      confirmPassword: '',\n      formValues: [],\n      showDetails: false\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n  formSubmit = () => {\n    if (this.state.password !== this.state.confirmPassword) {\n      alert('passwords did not matched')\n      return false\n    } else {\n      alert('Form Submitted Successfully')\n      this.setState({\n        formValues: [\n          this.state.userName,\n          this.state.mobile,\n          this.state.emailId\n        ],\n        showDetails: true\n      })\n      console.log(this.state.formValues)\n      this.props.history.push({\n        pathname: '/home/employeelist',\n        data: this.state.formValues\n      })\n      return true\n    }\n  }\n\n  render() {\n    const { userName, emailId, mobile, password, confirmPassword, securityQuestion, securityAnswer, role } = this.state;\n    const isSecurityAnsEnabled = securityQuestion !== \"\";\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div className=\"\">\n            <p className=\"h4 text-center text-primary font-weight-bold font-italic\">\n              Sign-Up\n\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"userName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { userName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"mobile\"\n                    label=\"Mobile No\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { mobile },\n                        errorMessage: \"Please enter your mobile number\"\n                      },\n                      pattern: {\n                        value: \"^[0-9]+$\",\n                        errorMessage:\n                          \"Mobile Number must be composed only with numbers\"\n                      },\n                      minLength: {\n                        value: 10,\n                        errorMessage:\n                          \"Your mobile number must be composed of 10 digits\"\n                      },\n                      maxLength: { value: 10 }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"emailId\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    errorMessage=\"Invalid email address\"\n                    validate={{\n                      required: {\n                        value: { emailId },\n                        errorMessage: \"Please enter your email address\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { password },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { confirmPassword },\n                        errorMessage: \"Please enter your confirm password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Confirm Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"role\"\n                    label=\"Role\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { role },\n                        errorMessage: \"Please select a role\"\n                      }\n                    }}>\n                    <option>Student</option>\n                    <option>Educator</option>\n                    <option>Admin</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityQuestion\"\n                    label=\"Security Question\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { securityQuestion },\n                        errorMessage: \"Please pick a security question\"\n                      }\n                    }}>\n                    <option></option>\n                    <option>What is the name of your favorite pet?</option>\n                    <option>What is your mother's maiden name?</option>\n                    <option>What was your favorite food as a child?</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityAnswer\"\n                    label=\"Security Answer\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { securityAnswer },\n                        errorMessage: \"Please type an answer\"\n                      }\n                    }}\n                    disabled={!isSecurityAnsEnabled}>\n\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\" sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n          <div>\n            {this.state.showDetails && (\n              <div className=\"mt-5\">\n                <>\n                  <p className=\"text-secondary h5 font-weight-bold font-italic\">\n                    Submitted form values\n                  </p>\n                </>\n                <ul style={{ listStyleType: \"none\" }}>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      User Name:{\" \"}\n                    </span>\n                    {this.state.userName}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mobile No:{\" \"}\n                    </span>\n                    {this.state.mobile}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mail Address:{\" \"}\n                    </span>\n                    {this.state.emailId}\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class HomePage extends React.Component {\n  render () {\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 h-50 rounded\">\n          <p className=\" h1 text-center text-secondary font-weight-bold font-italic\">\n            Login/Signup Portal\n          </p>\n          <Link\n            to=\"/home/login\" \n            className=\"btn btn-primary float-left  ml-5 mt-5\"\n          >\n            Login\n          </Link>\n          <Link\n            to=\"/home/register\"\n            className=\"btn btn-primary float-right mr-5 mt-5\"\n          >\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { AvForm, AvField } from 'availity-reactstrap-validation'\nimport { Button, Container, Row, Col } from 'reactstrap'\nexport default class Login extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loginUserName: '',\n      loginPassword: ''\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n  formSubmit = () => {\n    if (\n      this.state.loginUserName === 'admin' &&\n      this.state.loginPassword === 'admin'\n    ) {\n      alert('credentials matched')\n      this.props.history.push('/home/employeelist')\n      return true\n    } else {\n      alert('invalid credentials')\n      return false\n    }\n  }\n\n  render() {\n    const { loginUserName, loginPassword } = this.state;\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div>\n            <p className=\" h4 text-center text-primary font-weight-bold font-italic\">\n            Login\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginUserName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { loginUserName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginPassword\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { loginPassword },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class SuccessfulLogin extends React.Component {\n  render () {\n    return (\n      <div>\n        <p className=\" h1 text-center text-secondary font-weight-bold font-italic mt-5\">\n          Successful login!!!\n        </p>\n        <Link\n          to=\"/home/logout\"\n          className=\"btn btn-primary float-left  ml-5 mt-5\"\n        >\n          Logout\n        </Link>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Registration from './components/Registration'\nimport * as dotenv from 'dotenv' \n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport Login from './components/Login'\nimport './styles.css'\nimport SuccessfulLogin from './components/SuccessfulLogin'\n\nfunction App() {\n  dotenv.config();\n  console.log(process.env.REACT_APP_DATABASE_URL);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/home\" exact component={HomePage} />\n          <Route path=\"/home/login\" component={Login} />\n          <Route path=\"/home/register\" component={Registration} />\n          <Route path=\"/home/successfulLogin\" component={SuccessfulLogin} />\n          <Route path=\"/home/logout\" component={HomePage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n\n"],"sourceRoot":""}
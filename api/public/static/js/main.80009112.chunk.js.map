{"version":3,"sources":["components/Registration.js","components/HomePage.js","components/Login.js","components/PasswordReset.js","components/SuccessfulLogin.js","components/Step1.js","components/Step2.js","components/UsernameCheck.js","components/MasterForm.js","components/SecurityCheck.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Registration","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","newAccount","_asyncToGenerator","_callee","url","response","_args","arguments","_context","console","log","username","fetch","mode","headers","Content-Type","body","JSON","stringify","email","emailId","userName","password","role","mobile","securityQuestion","securityAnswer","json","handleChange","event","setState","_defineProperty","target","formSubmit","_callee2","_context2","confirmPassword","alert","formValues","showDetails","e","history","pathname","data","lastName","_createClass","_this$state","isSecurityAnsEnabled","React","createElement","className","AvForm","onValidSubmit","Container","Row","Col","sm","md","size","offset","AvField","onChange","label","validate","required","errorMessage","pattern","minLength","maxLength","disabled","Button","color","Fragment","style","listStyleType","fontWeight","fontStyle","Component","HomePage","apply","Link","to","Login","attemptLogin","loginUserName","loginPassword","response_user","t0","PasswordReset","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","confirmText","setConfirmText","onSubmit","preventDefault","SuccessfulLogin","Step1","currentStep","FormGroup","Label","for","Input","id","placeholder","Step2","UsernameCheck","confirmUser","SecurityCheck","secAnswer","setSecAnswer","App","dotenv","process","Router","Switch","Route","path","exact","component","Redirect","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.80009112.chunk.js","sourcesContent":["import React from 'react'\nimport { AvForm, AvField } from 'availity-reactstrap-validation'\nimport { Button, Container, Row, Col } from 'reactstrap'\n\nexport default class Registration extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userName: '',\n      lastName: '',\n      mobile: '',\n      emailId: '',\n      password: '',\n      confirmPassword: '',\n      role: 'Student',\n      securityQuestion: '',\n      securityAnswer: '',\n      formValues: [],\n      showDetails: false\n    }\n  }\n\n  newAccount = async (url = '', data = {}) => {\n    console.log(this.state.username);\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: this.state.emailId,\n        username: this.state.userName,\n        password: this.state.password,\n        role: this.state.role,\n        mobile: this.state.mobile,\n        securityQuestion: this.state.securityQuestion,\n        securityAnswer: this.state.securityAnswer,\n      })\n      }\n    );\n    return response.json();\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n  formSubmit = async () => {\n    if (this.state.password !== this.state.confirmPassword) {\n      alert('passwords do not matched')\n      return false\n    } else {\n      this.setState({\n        formValues: [\n          this.state.userName,\n          this.state.mobile,\n          this.state.emailId,\n          this.state.password,\n          this.state.role,\n          this.state.securityQuestion,\n          this.state.securityAnswer,\n        ],\n        showDetails: true\n      });\n      // inserting into the database the info\n      try {\n        let response = this.newAccount('http://localhost:9000/registerAccount');\n      } catch (e) {\n        console.log(e)\n      }\n      console.log(this.state.formValues)\n      this.props.history.push({\n        pathname: '/home/',\n        data: this.state.formValues\n      })\n      alert('Form Submitted Successfully')\n      return true\n    }\n  }\n\n  // formSubmit = () => {\n  //   if (this.state.password !== this.state.confirmPassword) {\n  //     alert('passwords did not matched')\n  //     return false\n  //   } else {\n  //     alert('Form Submitted Successfully')\n  //     this.setState({\n  //       formValues: [\n  //         this.state.userName,\n  //         this.state.mobile,\n  //         this.state.emailId\n  //       ],\n  //       showDetails: true\n  //     })\n  //     console.log(this.state.formValues)\n  //     this.props.history.push({\n  //       pathname: '/home/employeelist',\n  //       data: this.state.formValues\n  //     })\n  //     return true\n  //   }\n  // }\n\n  render() {\n    const { userName, emailId, mobile, password, confirmPassword, securityQuestion, securityAnswer, role } = this.state;\n    const isSecurityAnsEnabled = securityQuestion !== \"\";\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div className=\"\">\n            <p className=\"h4 text-center text-primary font-weight-bold font-italic\">\n              Sign-Up\n\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"userName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { userName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"mobile\"\n                    label=\"Mobile No\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { mobile },\n                        errorMessage: \"Please enter your mobile number\"\n                      },\n                      pattern: {\n                        value: \"^[0-9]+$\",\n                        errorMessage:\n                          \"Mobile Number must be composed only with numbers\"\n                      },\n                      minLength: {\n                        value: 10,\n                        errorMessage:\n                          \"Your mobile number must be composed of 10 digits\"\n                      },\n                      maxLength: { value: 10 }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"emailId\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    errorMessage=\"Invalid email address\"\n                    validate={{\n                      required: {\n                        value: { emailId },\n                        errorMessage: \"Please enter your email address\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { password },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { confirmPassword },\n                        errorMessage: \"Please enter your confirm password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Confirm Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"role\"\n                    label=\"Role\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { role },\n                        errorMessage: \"Please select a role\"\n                      }\n                    }}>\n                    <option>Student</option>\n                    <option>Educator</option>\n                    <option>Admin</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityQuestion\"\n                    label=\"Security Question\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { securityQuestion },\n                        errorMessage: \"Please pick a security question\"\n                      }\n                    }}>\n                    <option></option>\n                    <option>What is the name of your favorite pet?</option>\n                    <option>What is your mother's maiden name?</option>\n                    <option>What was your favorite food as a child?</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityAnswer\"\n                    label=\"Security Answer\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { securityAnswer },\n                        errorMessage: \"Please type an answer\"\n                      }\n                    }}\n                    disabled={!isSecurityAnsEnabled}>\n\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\" sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n          <div>\n            {this.state.showDetails && (\n              <div className=\"mt-5\">\n                <>\n                  <p className=\"text-secondary h5 font-weight-bold font-italic\">\n                    Submitted form values\n                  </p>\n                </>\n                <ul style={{ listStyleType: \"none\" }}>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      User Name:{\" \"}\n                    </span>\n                    {this.state.userName}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mobile No:{\" \"}\n                    </span>\n                    {this.state.mobile}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mail Address:{\" \"}\n                    </span>\n                    {this.state.emailId}\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class HomePage extends React.Component {\n  render () {\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 h-50 rounded\">\n          <p className=\" h1 text-center text-secondary font-weight-bold font-italic\">\n            Login/Signup Portal\n          </p>\n          <Link\n            to=\"/home/login\" \n            className=\"btn btn-primary float-left  ml-5 mt-5\"\n          >\n            Login\n          </Link>\n          <Link\n            to=\"/home/register\"\n            className=\"btn btn-primary float-right mr-5 mt-5\"\n          >\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Login extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loginUserName: '',\n      loginPassword: ''\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n    attemptLogin = async (url = '') => {\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.loginUserName,\n        password: this.state.loginPassword\n      })\n    }\n    );\n    return response.json();\n  }\n\n  formSubmit = async () => {\n    let response;\n    try {\n      response = await this.attemptLogin('http://localhost:9000/getCredentials');\n      console.log(response);\n    } catch (e) {\n      console.log(e)\n      alert('no account found with that username and/or password');\n      return false\n    }\n    // let response_user = response.results[0].username;\n    let response_user = (response === undefined) ? \"\" : response.username;\n    console.log(\"response_user\" + response_user);\n    if (\n      (this.state.loginUserName === 'admin' &&\n        this.state.loginPassword === 'admin') || this.state.loginUserName === response_user\n    ) {\n      alert('credentials matched')\n      this.props.history.push('/home/successfulLogin')\n      return true\n    } else {\n      alert('invalid credentials')\n      return false\n    }\n  }\n\n  render() {\n    const { loginUserName, loginPassword } = this.state;\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div>\n            <p className=\" h4 text-center text-primary font-weight-bold font-italic\">\n            Login\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginUserName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { loginUserName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginPassword\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { loginPassword },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <Button type=\"submit\" color=\"primary\" >\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n          <Link\n            to=\"/home/usernameCheck\"\n            className=\"btn btn-link float-center mx-auto text-center w-100 btn-small mt-4\">\n            Forgot your password?\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nfunction PasswordReset()  {\n  const [text, setText] = useState(\"\");\n  const [confirmText, setConfirmText] = useState(\"\");\n\n  function changePassword(event) {\n    setText(event.target.value);\n  }\n\n  function confirmPassword(event) {\n    setConfirmText(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (text === confirmText) {\n      alert(\"Password Reset\");\n      setText(\"\");\n      setConfirmText(\"\");\n    } else {\n      alert(\"Confirm password doesn't match\");\n      setText(\"\");\n      setConfirmText(\"\");\n    }\n  }\n\n  return (\n    <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n      <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n        <form onSubmit={handleSubmit} className=\"p-4\">\n          <label>Enter new Password: </label>\n          <input\n            value={text}\n            onChange={changePassword}\n            minLength=\"6\"\n            maxLength=\"16\"\n            type=\"password\"\n            className=\"ml-3\"\n          />\n          <br />\n          <br />\n          <label>Confirm Password:  </label>\n          <input\n            value={confirmText}\n            onChange={confirmPassword}\n            minLength=\"6\"\n            maxLength=\"16\"\n            type=\"password\"\n            className=\"ml-3\"\n          />\n          <br />\n          <br />\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\"/>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class SuccessfulLogin extends React.Component {\n  \n  render () {\n    return (\n      <div>\n        <p className=\" h1 text-center text-secondary font-weight-bold font-italic mt-5\">\n          Successful login!!!\n        </p>\n        <Link\n          to=\"/home/logout\"\n          className=\"btn btn-primary float-left  ml-5 mt-5\"\n        >\n          Logout\n        </Link>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\nconst Step1 = props => {\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  return (\n    <>\n      <FormGroup>\n        <Label for=\"email\">Email Id</Label>\n        <Input\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your Email Id\"\n          value={props.email} // Prop: The email input data\n          onChange={props.handleChange} // Prop: Puts data into the state\n        />\n      </FormGroup>\n    </>\n  );\n};\n\nexport default Step1;\n","import React from \"react\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\n\nconst Step2 = props => {\n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  return (\n    <>\n      <p>Your Security Question : </p>\n      <FormGroup>\n        <Label for=\"username\">Question</Label>\n        <Input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          placeholder=\"Enter your Username\"\n          value={props.username} // Prop: The username input data\n          onChange={props.handleChange} // Prop: Puts data into the state\n        />\n      </FormGroup>\n    </>\n  );\n};\n\nexport default Step2;\n","import React from \"react\";\n\nexport default class UsernameCheck extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loginUserName: '',\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n        console.log(this.state)\n    }\n\n    // TODO: check username with database\n    confirmUser = () => {\n        return this.state.loginUserName === 'zhanso'; // returns boolean\n    }\n\n    formSubmit = () => {\n        if (this.confirmUser()) {\n            alert(\"username found\");\n            this.props.history.push('/home/securityCheck');\n        } else {\n            alert(\"username does not exist\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n                <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n                    <form onSubmit={this.formSubmit} className=\"p-4\">\n                        <label>Enter Username: </label>\n                        <input\n                            onChange={this.handleChange}\n                            className=\"ml-3\"\n                            name=\"loginUserName\"\n                        />\n                        <br />\n                        <br />\n                        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div>\n        );   \n    }\n}\n\n// export default UsernameCheck;\n\n\n// import React, { useState } from \"react\";\n// function UsernameCheck() {\n//     const [user, setUser] = useState(\"\");\n    \n//     function changeUser(event) {\n//         setUser(event.target.value)\n//     }\n\n\n//     // TODO: check username with database\n//     function confirmUser(event) {\n//         return event.target.value == \"\"; // returns boolean\n//     }\n\n//     function handleSubmit(event) {\n//         event.preventDefault();\n\n//         if (confirmUser) {\n//             /* TODO: move to the security check page. no idea how \n//             this.history.push({\n//                 pathname: \"/home/securityCheck\",\n//                 // data: this.state.formValues //TODO: what\n//             }); */\n//         } else {\n//             alert(\"username does not exist\");\n//             setUser(\"\");\n//         }\n//     } \n\n//     return (\n//         <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n//             <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n//                 <form onSubmit={handleSubmit} className=\"p-4\">\n//                     <label>Enter Username: </label>\n//                     <input\n//                         value={user}\n//                         onChange={changeUser}\n//                         className=\"ml-3\"\n//                     />\n//                     <br />\n//                     <br />\n//                     <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default UsernameCheck;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardFooter\n} from \"reactstrap\";\n\nimport Step1 from \"./Step1\";\nimport Step2 from \"./Step2\";\n\n// import styled from \"styled-components\";\n\nclass MasterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // Set the intiial input values\n    this.state = {\n      currentStep: 1,\n      email: \"\",\n      username: \"\",\n      question:\"\"\n    };\n\n    // Bind the submission to handleChange()\n    this.handleChange = this.handleChange.bind(this);\n\n    // Bind new functions for next and previous\n    this._next = this._next.bind(this);\n    this._prev = this._prev.bind(this);\n  }\n\n  // Use the submitted data to set the state\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // Trigger an alert on form submission\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, username } = this.state;\n    alert(`Your registration detail: \\n \n      Email: ${email} \\n \n      Username: ${username} \\n\n      Question:#{question}`);\n  };\n\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  _next() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  _prev() {\n    let currentStep = this.state.currentStep;\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.setState({\n      currentStep: currentStep\n    });\n  }\n\n  // The \"next\" and \"previous\" button functions\n  get previousButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is not 1, then render the \"previous\" button\n    if (currentStep !== 1) {\n      return (\n        <Button color=\"secondary float-left\" onClick={this._prev}>\n          Previous\n        </Button>\n      );\n    }\n\n    // ...else return nothing\n    return null;\n  }\n\n  get nextButton() {\n    let currentStep = this.state.currentStep;\n    // If the current step is not 3, then render the \"next\" button\n    if (currentStep < 3) {\n      return (\n        <Button color=\"primary float-right\" onClick={this._next}>\n          Next\n        </Button>\n      );\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  get submitButton() {\n    let currentStep = this.state.currentStep;\n\n    // If the current step is the last step, then render the \"submit\" button\n    if (currentStep > 2) {\n      return <Button color=\"primary float-right\">Submit</Button>;\n    }\n    // ...else render nothing\n    return null;\n  }\n\n  render() {\n    return (\n      <>\n        <Form onSubmit={this.handleSubmit}>\n          <Card>\n            <CardHeader>Confirm your acount</CardHeader>\n            <CardBody>\n              <CardTitle>\n              </CardTitle>\n              <CardText />\n              <Step1\n                currentStep={this.state.currentStep}\n                handleChange={this.handleChange}\n                email={this.state.email}\n              />\n              <Step2\n                currentStep={this.state.currentStep}\n                handleChange={this.handleChange}\n                email={this.state.username}\n              />\n              \n            </CardBody>\n            <CardFooter>\n              {this.previousButton}\n              {this.nextButton}\n              {this.submitButton}\n            </CardFooter>\n          </Card>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default MasterForm;\n","import React, { useState } from \"react\";\nfunction SecurityCheck() {\n    const [secAnswer, setSecAnswer] = useState(\"\");\n    const secQuestion = \"TODO\" // TODO: get users question\n\n    function changeSecAnswer(event) {\n        setSecAnswer(event.target.value)\n    }\n\n    // TODO: check Security Answer with database and with specified username\n    function confirmSecAnswer(event) {\n        return event.target.value == \"\"; // returns boolean\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        if (confirmSecAnswer) {\n            /* TODO: move to the password reset page. no idea how\n            setSecAnswer(\"\");\n            this.props.history.push({\n                pathname: \"/home/passwordReset\",\n                // data: this.state.formValues //TODO: what\n            });\n            */\n        } else {\n            alert(\"security answer wrong\");\n            setSecAnswer(\"\");\n        }\n    }\n\n    return (\n        <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n            <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n                <form onSubmit={handleSubmit} className=\"p-4\">\n                    <br />\n                    <label>Your Security Question:  </label>\n                    <input\n                        value={secQuestion}\n                        disabled={true}\n                    />\n                    <br />\n                    <label>Enter Security Question Answer:  </label>\n                    <input\n                        value={secAnswer}\n                        onChange={changeSecAnswer}\n                        className=\"ml-3\"\n                    />\n                    <br />\n                    <br />\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SecurityCheck;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Registration from './components/Registration'\nimport * as dotenv from 'dotenv' \n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport Login from \"./components/Login\";\nimport PasswordReset from \"./components/PasswordReset\";\nimport SuccessfulLogin from './components/SuccessfulLogin';\nimport MasterForm from \"./components/MasterForm\";\nimport UsernameCheck from \"./components/UsernameCheck\"\nimport SecurityCheck from \"./components/SecurityCheck\";\nimport \"./styles.css\";\n\nfunction App() {\n  dotenv.config();\n  console.log(process.env.REACT_APP_DATABASE_URL);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/home\" exact component={HomePage} />\n          <Route path=\"/home/login\" component={Login} />\n          <Route path=\"/home/register\" component={Registration} />\n          <Route path=\"/home/successfulLogin\" component={SuccessfulLogin} />\n          <Route path=\"/home/logOut\" component={HomePage} />\n          <Route path=\"/home/usernameCheck\" component={UsernameCheck} />\n          <Route path=\"/home/securityCheck\" component={SecurityCheck} />\n          <Route path=\"/home/password\" component={PasswordReset} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n\n"],"sourceRoot":""}
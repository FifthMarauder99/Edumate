{"version":3,"sources":["components/Registration.js","components/HomePage.js","components/Login.js","components/SuccessfulLogin.js","index.js"],"names":["Registration","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","handleChange","event","setState","_defineProperty","target","name","value","console","log","state","formSubmit","password","confirmPassword","alert","formValues","userName","mobile","emailId","showDetails","history","push","pathname","data","lastName","_createClass","key","_this$state","securityQuestion","securityAnswer","role","isSecurityAnsEnabled","React","createElement","className","AvForm","onValidSubmit","Container","Row","Col","sm","md","size","offset","AvField","onChange","label","type","validate","required","errorMessage","pattern","minLength","maxLength","disabled","Button","color","Fragment","style","listStyleType","fontWeight","fontStyle","Component","HomePage","apply","arguments","Link","to","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Login","_asyncToGenerator","_callee","response","response_password","_context","attemptLogin","t0","loginUserName","loginPassword","SuccessfulLogin","App","dotenv","process","Router","Switch","Route","path","exact","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a9e8a576.chunk.js","sourcesContent":["import React from 'react'\nimport { AvForm, AvField } from 'availity-reactstrap-validation'\nimport { Button, Container, Row, Col } from 'reactstrap'\n\nexport default class Registration extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userName: '',\n      lastName: '',\n      mobile: '',\n      emailId: '',\n      password: '',\n      confirmPassword: '',\n      formValues: [],\n      showDetails: false\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n  formSubmit = () => {\n    if (this.state.password !== this.state.confirmPassword) {\n      alert('passwords did not matched')\n      return false\n    } else {\n      alert('Form Submitted Successfully')\n      this.setState({\n        formValues: [\n          this.state.userName,\n          this.state.mobile,\n          this.state.emailId\n        ],\n        showDetails: true\n      })\n      console.log(this.state.formValues)\n      this.props.history.push({\n        pathname: '/home/employeelist',\n        data: this.state.formValues\n      })\n      return true\n    }\n  }\n\n  render() {\n    const { userName, emailId, mobile, password, confirmPassword, securityQuestion, securityAnswer, role } = this.state;\n    const isSecurityAnsEnabled = securityQuestion !== \"\";\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div className=\"\">\n            <p className=\"h4 text-center text-primary font-weight-bold font-italic\">\n              Sign-Up\n\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"userName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { userName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"mobile\"\n                    label=\"Mobile No\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { mobile },\n                        errorMessage: \"Please enter your mobile number\"\n                      },\n                      pattern: {\n                        value: \"^[0-9]+$\",\n                        errorMessage:\n                          \"Mobile Number must be composed only with numbers\"\n                      },\n                      minLength: {\n                        value: 10,\n                        errorMessage:\n                          \"Your mobile number must be composed of 10 digits\"\n                      },\n                      maxLength: { value: 10 }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"emailId\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    errorMessage=\"Invalid email address\"\n                    validate={{\n                      required: {\n                        value: { emailId },\n                        errorMessage: \"Please enter your email address\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { password },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { confirmPassword },\n                        errorMessage: \"Please enter your confirm password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Confirm Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"role\"\n                    label=\"Role\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { role },\n                        errorMessage: \"Please select a role\"\n                      }\n                    }}>\n                    <option>Student</option>\n                    <option>Educator</option>\n                    <option>Admin</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityQuestion\"\n                    label=\"Security Question\"\n                    type=\"select\"\n                    validate={{\n                      required: {\n                        value: { securityQuestion },\n                        errorMessage: \"Please pick a security question\"\n                      }\n                    }}>\n                    <option></option>\n                    <option>What is the name of your favorite pet?</option>\n                    <option>What is your mother's maiden name?</option>\n                    <option>What was your favorite food as a child?</option>\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"securityAnswer\"\n                    label=\"Security Answer\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { securityAnswer },\n                        errorMessage: \"Please type an answer\"\n                      }\n                    }}\n                    disabled={!isSecurityAnsEnabled}>\n\n                  </AvField>\n                </Col>\n              </Row>\n              <Row>\n                <Col className=\"text-center\" sm=\"12\" md={{ size: 10, offset: 1 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n          <div>\n            {this.state.showDetails && (\n              <div className=\"mt-5\">\n                <>\n                  <p className=\"text-secondary h5 font-weight-bold font-italic\">\n                    Submitted form values\n                  </p>\n                </>\n                <ul style={{ listStyleType: \"none\" }}>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      User Name:{\" \"}\n                    </span>\n                    {this.state.userName}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mobile No:{\" \"}\n                    </span>\n                    {this.state.mobile}\n                  </li>\n                  <li>\n                    <span\n                      style={{\n                        fontWeight: \"bold\",\n                        fontStyle: \"italic\",\n                        color: \"grey\"\n                      }}\n                    >\n                      Mail Address:{\" \"}\n                    </span>\n                    {this.state.emailId}\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class HomePage extends React.Component {\n  render () {\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 h-50 rounded\">\n          <p className=\" h1 text-center text-secondary font-weight-bold font-italic\">\n            Login/Signup Portal\n          </p>\n          <Link\n            to=\"/home/login\" \n            className=\"btn btn-primary float-left  ml-5 mt-5\"\n          >\n            Login\n          </Link>\n          <Link\n            to=\"/home/register\"\n            className=\"btn btn-primary float-right mr-5 mt-5\"\n          >\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { AvForm, AvField } from 'availity-reactstrap-validation'\nimport { Button, Container, Row, Col } from 'reactstrap'\nexport default class Login extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      loginUserName: '',\n      loginPassword: ''\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state)\n  }\n\n  formSubmit = async () => {\n    let response;\n    try {\n      response = await this.attemptLogin('http://localhost:9000/getCredentials');\n      console.log(response);\n    } catch (e) {\n      console.log(e)\n      alert('no account found with that username and/or password');\n      return false\n    }\n    // let response_user = response.results[0].username;\n    let response_password = (response === undefined) ? \"\" : response.password;\n    console.log(\"response_password \" + response_password);\n    if (\n      (this.state.loginUserName === 'admin' &&\n        this.state.loginPassword === 'admin') || this.state.loginPassword === response_password\n    ) {\n      alert('credentials matched')\n      this.props.history.push('/home/successfulLogin')\n      return true\n    } else {\n      alert('invalid credentials')\n      return false\n    }\n  }\n\n  render() {\n    const { loginUserName, loginPassword } = this.state;\n    return (\n      <div className=\"menu p-md-5 p-sm-0 min-vh-100\">\n        <div className=\"mx-auto py-5 bg-light loginreg w-25 rounded\">\n          <div>\n            <p className=\" h4 text-center text-primary font-weight-bold font-italic\">\n            Login\n            </p>\n          </div>\n          <AvForm onValidSubmit={this.formSubmit}>\n            <Container>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginUserName\"\n                    label=\"User Name\"\n                    type=\"text\"\n                    validate={{\n                      required: {\n                        value: { loginUserName },\n                        errorMessage: \"Please enter your user name\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"First Name must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 4,\n                        errorMessage: \"User name must be b/w 4 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage: \"User name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <AvField\n                    onChange={this.handleChange}\n                    name=\"loginPassword\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validate={{\n                      required: {\n                        value: { loginPassword },\n                        errorMessage: \"Please enter your password\"\n                      },\n                      pattern: {\n                        value: \"^[A-Za-z0-9]+$\",\n                        errorMessage:\n                          \"Password must be composed only with letter and numbers\"\n                      },\n                      minLength: {\n                        value: 5,\n                        errorMessage:\n                          \"Password name must be b/w 5 to 16 characters\"\n                      },\n                      maxLength: {\n                        value: 16,\n                        errorMessage:\n                          \"Password name must be b/w 6 to 16 characters\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Login\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nexport default class SuccessfulLogin extends React.Component {\n  render () {\n    return (\n      <div>\n        <p className=\" h1 text-center text-secondary font-weight-bold font-italic mt-5\">\n          Successful login!!!\n        </p>\n        <Link\n          to=\"/home/logout\"\n          className=\"btn btn-primary float-left  ml-5 mt-5\"\n        >\n          Logout\n        </Link>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Registration from './components/Registration'\nimport * as dotenv from 'dotenv' \n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport Login from './components/Login'\nimport './styles.css'\nimport SuccessfulLogin from './components/SuccessfulLogin'\n\nfunction App() {\n  dotenv.config();\n  console.log(process.env.REACT_APP_DATABASE_URL);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/home\" exact component={HomePage} />\n          <Route path=\"/home/login\" component={Login} />\n          <Route path=\"/home/register\" component={Registration} />\n          <Route path=\"/home/successfulLogin\" component={SuccessfulLogin} />\n          <Route path=\"/home/logout\" component={HomePage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n\n"],"sourceRoot":""}